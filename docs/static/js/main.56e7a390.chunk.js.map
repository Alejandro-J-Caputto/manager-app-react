{"version":3,"sources":["hooks/useNotification.tsx","components/shared/notifications/Notification.tsx","hooks/useForm.tsx","store/authContext/auth-context.tsx","hooks/useAuthApiHook.tsx","components/authComponents/loginForm/LoginForm.tsx","components/authComponents/registerForm/RegisterForm.tsx","pages/authPages/Authorization.tsx","hooks/useManagerApiHook.tsx","store/managerContext.tsx/manager-context.tsx","assets/img/user-img-default.png","components/shared/navbar/Navbar.tsx","components/managerAppComponents/createWorkspace/AddWorkspace.tsx","components/shared/workspaceCard/WorkspaceCard.tsx","components/managerAppComponents/Search/SearchWorkspace.tsx","components/managerAppComponents/workspacesAll/WorkspacesAll.tsx","components/shared/sidebar/Sidebar.tsx","layout/dynamicContainer/DynamicContainer.tsx","pages/managerAppPages/homePage/HomePage.tsx","hooks/useUserProfileApi.tsx","components/managerAppComponents/profileForm/ProfileForm.tsx","components/managerAppComponents/profileForm/ProfileFormPassword.tsx","components/managerAppComponents/profileForm/ProfilePhoto.tsx","pages/managerAppPages/profilePage/Profife.tsx","hooks/useTodoListsApi.tsx","components/managerAppComponents/todoItem/TodoItem.tsx","components/managerAppComponents/todoListCard/TodoListCard.tsx","components/shared/modal/Modal.tsx","pages/managerAppPages/workspace/Workspace.tsx","routers/managerAppRouter/ManagerAppRouter.tsx","routers/appRouter/AppRouter.tsx","ManagerApp.tsx","index.tsx"],"names":["useNotification","useState","notificationIsShow","setNotificationIsShow","text","icon","notificationContent","setNotificationContent","showNotificationHandler","hideNotificationHandler","notificationContentHandler","notificationOPT","NotificationCmp","className","useForm","initialState","formValues","setFormValues","typing","setTyping","handleInputChange","target","name","value","prevValues","reset","newFormState","customValidator","useCallback","validableInput","isValid","required","toString","trim","length","type","includes","minLength","maxLength","min","max","valueCompare","NOTIFICATION_OPTS","AuthContextHook","createContext","isLoggedIn","user","onLogout","onLogin","email","password","onRegister","passwordConfirm","onCheckToken","AuthContextProvider","children","onShowNotification","onHideNotification","onNotificationContent","authHTTP","body","a","authType","REQUEST_TYPE","API_URL","CONFIG","method","JSON","stringify","headers","localStorage","getItem","fetch","request","json","response","console","warn","setIsLoggedIn","setUser","logInHandler","log","responseAuth","status","role","active","_id","img","setTimeout","setItem","token","error","registerHandler","newUser","logOutHandler","removeItem","checkTokenHandler","Provider","LoginForm","history","useContext","validEmail","setValidEmail","validPassword","setValidPassword","leftInputEmail","setLeftInputEmail","leftInputPassword","setLeftInputPassword","leftIntput","validForm","setValidForm","submitButton","useRef","loginForm","passwordIsValid","useMemo","emailIsValid","useEffect","prev","debounce","clearTimeout","onBlurHandler","event","inputElement","valid","current","disabled","ref","onSubmit","preventDefault","replace","autoComplete","onBlur","onChange","placeholder","id","htmlFor","activeClassName","to","RegisterForm","leftInput","validName","setValidName","validConfirmPass","setConfirmPass","nameIsValid","passwordConfirmIsValid","prevValue","Authorization","path","component","useManagerApiHook","managerHTTP","endpoint","request_type","ManagerContextHook","workspaces","onGetWorkspaces","onCreateWorkspaces","onSetTheme","onCheckTokenManager","ManagerAppContextProvider","setWorkspaces","getWorkspaces","responseManager","workspace","createWorkspace","bodyRequest","title","managerResponse","setTheme","checkTokenOnRefresh","Navbar","AuthContext","src","ProfilePic","alt","onClick","AddWorkspace","addWorkspace","titleInput","cardList","setError","theme","setOutline","cardId","childNodes","forEach","el","liItem","classList","remove","add","push","autoFocus","themeCard","closest","getAttribute","data-theme","WorkspaceCard","SearchWorkspace","search","setSearch","noFound","setNoFound","filteredSpaces","setFilteredSpaces","searching","setSearching","timeSearch","filteredPrev","filter","toLowerCase","clearInterval","style","textAlign","map","workCard","WorkspacesAll","Sidebar","exact","DynamicContainer","HomePage","props","useUserProfileApi","patchUserData","form","updatePassword","updateProfilePicture","file","formData","FormData","append","ProfileForm","classes","onShow","onHide","onContent","submitProfileHandler","content","ProfileFormPassword","passwordReset","passwordResetIsValid","ProfilePhoto","image","stylesPic","backgroundImage","backgroundSize","backgorundPosition","borderRadius","loadImageHandler","files","reader","FileReader","readAsDataURL","onload","result","url","Profife","useTodoListsApi","getTodoListsById","workspaceID","todoList","Error","addNewTodoList","val","project","newTodoList","deleteToDoList","todoListId","addNewTodo","todoListID","todo","newTodo","updateStatusTodo","todoID","todoDone","done","dragAndDropTodo","TodoItem","currValue","isDone","setIsDone","onIsDone","todoText","todoContent","handleTodoChange","draggable","onDragStart","dataTransfer","setData","effectAllowed","TodoListCard","onUpdate","onModalControlHandler","onSetTodoListID","todos","titleTodoList","todosCard","setTodosCard","onAddNewTodo","prevTodos","newTodoText","handleAddSubmit","todoListRef","dropHandler","currentTodoID","getData","data-id","onDragOver","types","onDragLeave","onDrop","Modal","onClose","onDeleteTodoList","WorkspaceView","update","setUpdate","useParams","newListTitle","todoLists","setTodoLists","setTodoListID","currentWorkspace","find","workSpc","workspaceBackgroundStyle","bacgroundPosition","modalIsShown","setModalIsShown","modalControlHandler","confirmTodoListDeleteModal","prevTodoLists","updateHandler","Promise","res","rej","onAddNewList","handleAddNewList","getTodoLists","ManagerAppRouter","location","pathname","ManagerCtx","AppRouter","ManagerApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56e7a390.chunk.js","sourcesContent":["import { useState } from 'react'\n\nexport const useNotification = () => {\n  const [notificationIsShow, setNotificationIsShow] = useState(false)\n  const [notificationContent, setNotificationContent] = useState({text:'', icon:''})\n  const showNotificationHandler = () => {\n    setNotificationIsShow(true);\n  }\n  const hideNotificationHandler = () => {\n    setNotificationIsShow(false)\n  }\n\n  const notificationContentHandler = (notificationOPT: {text:string, icon:string}) => {\n    setNotificationContent(notificationOPT)\n  }\n\n  return {notificationIsShow, notificationContent, showNotificationHandler, hideNotificationHandler, notificationContentHandler}\n}\n","import React from 'react'\n\nexport type NotifiyType = 'registration' | 'login' | 'delete' | 'loading' | 'wuops' | 'searching' | 'create' | 'update'\n\nexport const NotificationCmp = ({notificationContent}:{notificationContent:{text:string, icon:string}}) => {\n\n  return (    \n      <div className=\"notification\">\n      <div className=\"notification__action\">\n        <i className={notificationContent.icon}></i>\n      </div>\n      <div className=\"notifation__body\">\n        <div className=\"notification__message\">\n          <p>{notificationContent.text}</p>\n        </div>\n      </div>\n    </div >\n  )\n}\n","import { ChangeEvent, useCallback, useState } from 'react'\nexport interface Validatable {\n  value: string | number | Date;\n  valueCompare?: string | number\n  type?: string\n  required?: boolean;\n  minLength?: number;\n  maxLength?: number;\n  min?: number;\n  max?: number;\n}\nexport const useForm = <T extends Object>(initialState: T) => {\n  const [formValues, setFormValues] = useState(initialState);\n  const [typing, setTyping] = useState(false)\n\n  const handleInputChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    let { name, value } = target\n    setFormValues((prevValues) => {\n      setTyping(true)\n      return {\n        ...prevValues,\n        [name]: value\n      }\n    })\n  }\n  const reset = (newFormState = initialState) => {\n    setFormValues(newFormState)\n  }\n\n  const customValidator = useCallback((validableInput: Validatable) => {\n    let isValid = true;\n    if (validableInput.required) {\n      isValid = isValid && validableInput.value.toString().trim().length !== 0;\n    }\n    if (validableInput.type === 'email') {\n      isValid = isValid && validableInput.value.toString().trim().includes('@');\n    }\n    if (validableInput.minLength != null && typeof validableInput.value === 'string') {\n      isValid = isValid && validableInput.value.length > validableInput.minLength\n    }\n    if (validableInput.maxLength != null && typeof validableInput.value === 'string') {\n      isValid = isValid && validableInput.value.length < validableInput.maxLength\n    }\n    if (validableInput.min != null && typeof validableInput.value === 'number') {\n      isValid = isValid && validableInput.value > validableInput.min;\n    }\n    if (validableInput.max != null && typeof validableInput.value === 'number') {\n      isValid = isValid && validableInput.value < validableInput.max\n    }\n    if (validableInput.valueCompare) {\n      isValid = isValid && validableInput.valueCompare === validableInput.value\n    }\n    return isValid\n\n  }, [])\n\n  return { formValues, handleInputChange, reset, customValidator, typing, setTyping }\n}","import React, { createContext, ReactChild, ReactChildren, useCallback, useState } from 'react'\nimport { useAuthApiHook } from '../../hooks/useAuthApiHook';\nimport { LoginResponse, User, RegisterResponse, CheckTokenResponse } from '../../interface/auth/authorizations';\n\ninterface RegisterFn {\n  onRegister: (name: string, email: string, password: string, passwordConfirm: string) => void;\n}\nconst NOTIFICATION_OPTS = {\n  login: {\n    text: 'Succesfully Logged In',\n    icon: 'far fa-check-circle'\n  },\n  registration: {\n    text: 'Succesfully registered',\n    icon: 'far fa-check-circle'\n  },\n  loading: {\n    text: 'Activating Super Security!!',\n    icon: 'fas fa-sync fa-spin'\n  },\n  error: {\n    text: 'there was a problem',\n    icon: 'fas fa-exclamation-circle'\n  }\n}\n\nexport const AuthContextHook = createContext<{\n  isLoggedIn: boolean;\n  user: User;\n  onLogout: () => void;\n  onLogin: (email: string, password: string) => void;\n  onRegister: (name: string, email: string, password: string, passwordConfirm: string) => void;\n  onCheckToken: () => void;\n}>({\n  isLoggedIn: false,\n  user: {},\n  onLogout: () => { },\n  onLogin: (email: string, password: string) => { },\n  onRegister: (name: string, email: string, password: string, passwordConfirm: string) => { },\n  onCheckToken: () => { },\n})\n\n\n\n\nexport const AuthContextProvider = ({ children, onShowNotification, onHideNotification, onNotificationContent }: {children: ReactChildren | ReactChild, onShowNotification: () => void, onHideNotification: () => void, onNotificationContent: (notificationOPT: { text: string, icon: string }) => void }) => {\n  const { authHTTP } = useAuthApiHook()\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState({})\n  const logInHandler = async (email: string, password: string) => {\n    console.log('patata')\n    onShowNotification();\n    onNotificationContent(NOTIFICATION_OPTS.loading)\n    const responseAuth: LoginResponse = await authHTTP({ email, password }, 'login');\n    console.log(responseAuth)\n    try {\n      if (responseAuth.status === 'success') {\n        onNotificationContent(NOTIFICATION_OPTS.login)\n\n        const user: User = {\n          role: responseAuth.user.role,\n          active: responseAuth.user.active,\n          _id: responseAuth.user._id,\n          name: responseAuth.user.name,\n          email: responseAuth.user.email,\n          img: responseAuth.user.img\n        }\n        setUser(user);\n        setTimeout(() => {\n          onHideNotification();\n          setIsLoggedIn(true);\n        }, 2500);\n\n        localStorage.setItem('reactBearer', `Bearer ${responseAuth.token}`)\n\n      }\n\n      if (responseAuth.status === 'fail') {\n        onNotificationContent(NOTIFICATION_OPTS.error);\n        setTimeout(() => {\n          onHideNotification();\n        }, 2500);\n      }\n\n    } catch (error) {\n      console.log(error)\n\n    }\n  }\n\n  const registerHandler: RegisterFn[\"onRegister\"] = async (name, email, password, passwordConfirm) => {\n    onShowNotification();\n    onNotificationContent(NOTIFICATION_OPTS.loading);\n    const responseAuth: RegisterResponse = await authHTTP({ name, email, password, passwordConfirm }, 'register');\n    if (responseAuth.status === 'success') {\n      onNotificationContent(NOTIFICATION_OPTS.registration);\n      const user: User = {\n        role: responseAuth.newUser.role,\n        active: responseAuth.newUser.active,\n        _id: responseAuth.newUser._id,\n        name: responseAuth.newUser.name,\n        email: responseAuth.newUser.email,\n        img: responseAuth.newUser.img\n      }\n      setUser(user);\n      setTimeout(() => {\n        onHideNotification();\n        setIsLoggedIn(true);\n      }, 2500);\n      localStorage.setItem('reactBearer', `Bearer ${responseAuth.token}`)\n    }\n    if( responseAuth.status === 'fail') {\n      onNotificationContent(NOTIFICATION_OPTS.error);\n      setTimeout(() => {\n        onHideNotification();\n      }, 2500);\n    }\n  }\n\n  const logOutHandler = async () => {\n    try {\n\n      const responseAuth = await authHTTP(null, 'logout', 'GET');\n      if (responseAuth.status === 'success') {\n        localStorage.setItem('reactBearer', 'logout');\n        localStorage.removeItem('lastPath');\n        setIsLoggedIn(false);\n      }\n    } catch (error) {\n      console.warn(error)\n    }\n  }\n\n  const checkTokenHandler = useCallback(async () => {\n    const responseAuth: CheckTokenResponse = await authHTTP(null, 'checkToken', 'GET');\n    if (responseAuth.status === 'success') {\n      const { _id, email, name, active, role, img } = responseAuth.user;\n      setUser({\n        role,\n        active,\n        _id,\n        name,\n        email,\n        img,\n      });\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n      localStorage.setItem('reactBearer', 'logout');\n      setUser({});\n    }\n  }, [authHTTP])\n\n  return (\n    <AuthContextHook.Provider value={{\n      isLoggedIn: isLoggedIn,\n      onLogout: logOutHandler,\n      onLogin: logInHandler,\n      onRegister: registerHandler,\n      user: user,\n      onCheckToken: checkTokenHandler,\n    }}>\n      {children}\n    </AuthContextHook.Provider>\n  )\n}\n","import { useCallback } from \"react\";\n\nexport interface Login {\n  email: string,\n  password: string\n}\nexport interface Register {\n  name: string,\n  email: string,\n  password: string,\n  passwordConfirm: string\n}\ntype authType = 'login' | 'register' | 'logout' | 'checkToken';\nexport const useAuthApiHook = () => {\n\n  const authHTTP = useCallback(async (body: Login | Register | null, authType: authType = 'login', REQUEST_TYPE = 'POST') => {\n    const API_URL: string = `https://manager-app-v2.herokuapp.com/api/todoapp/v1/auth`;\n    // const API_URL: string = `http://localhost:8000/api/todoApp/v1/auth`;\n\n    try {\n      const CONFIG = {\n        method: REQUEST_TYPE,\n        body: body === null ? null : JSON.stringify(body),\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json',\n          'Authorization': authType === 'checkToken' && REQUEST_TYPE === 'GET' ? localStorage.getItem('reactBearer')! : ''\n        }\n      }\n      const request = await fetch(`${API_URL}/${authType}`, CONFIG);\n      const response = await request.json();\n      return response;\n    } catch (error) {\n      console.warn(error)\n    }\n  }, [])\n  return { authHTTP };\n}\n","import React, { useEffect, useState, useMemo, useContext, useRef } from 'react'\nimport { NavLink, RouteComponentProps } from 'react-router-dom'\nimport { useForm, Validatable } from '../../../hooks/useForm'\nimport { AuthContextHook } from '../../../store/authContext/auth-context'\n\nexport const LoginForm = ({history}:{history:RouteComponentProps['history']}) => {\n  const AuthContext = useContext(AuthContextHook);\n  const {onLogin} = AuthContext;\n  const [validEmail, setValidEmail] = useState(false);\n  const [validPassword, setValidPassword] = useState(false);\n  const [leftInputEmail, setLeftInputEmail] = useState(false)\n  const [leftInputPassword, setLeftInputPassword] = useState(false)\n  const [validForm, setValidForm] = useState({ isValid: false, leftIntput: false })\n  const { formValues, handleInputChange, customValidator, typing, setTyping } = useForm({ email: '', password: '' })\n  const { email, password } = formValues;\n\n\n  const submitButton = useRef<HTMLButtonElement>(null!)\n  const loginForm = useRef<HTMLFormElement>(null!)\n\n\n  const passwordIsValid: Validatable = useMemo(() => {\n    return {\n      value: password,\n      required: true,\n      minLength: 4,\n      maxLength: 15,\n    }\n  },[password])\n\n  const emailIsValid: Validatable = useMemo(() => {\n    return {\n      value: email,\n      required: true,\n      type: 'email',\n      min: 3\n    }\n  }, [email])\n\n\n  useEffect(() => {\n    if (typing) {\n      setValidForm((prev) => {\n        return {\n          ...prev,\n          isValid: false\n        }\n      })\n    }\n    const debounce = setTimeout(() => {\n      // setTyping(true)\n      if (customValidator(emailIsValid) && typing === true) {\n        setValidEmail(true)\n        setLeftInputEmail(true)\n      }\n      if (customValidator(passwordIsValid) && typing === true) {\n        setValidPassword(true)\n        setLeftInputPassword(true)\n      }\n\n    }, 500)\n    return () => {\n      clearTimeout(debounce)\n    }\n  }, [email, password, emailIsValid, passwordIsValid, customValidator, typing])\n\n  const onBlurHandler = (event: React.FormEvent<HTMLInputElement>) => {\n    const target = event.target as HTMLInputElement\n    const inputElement = target.name;\n    let valid = false;\n    if (inputElement === 'email') {\n      valid = customValidator(emailIsValid);\n      setValidEmail(valid)\n      setTyping(true)\n      setLeftInputEmail(true)\n    }\n    if (inputElement === 'password') {\n      valid = customValidator(passwordIsValid);\n      setValidPassword(valid)\n      setTyping(true)\n      setLeftInputPassword(true)\n    }\n    return valid;\n  }\n\n  useEffect(() => {\n    submitButton.current.disabled = false\n  }, [email, password])\n\n  const onSubmitLoginHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n    submitButton.current.disabled = true;\n    if (!validEmail || !validPassword) {\n      submitButton.current.disabled = false;\n      setValidForm((prev) => {\n        return { ...prev, isValid: true }\n      })\n      return;\n    }\n    onLogin(email, password);\n    // const lastPath = localStorage.getItem('lastPath');\n    // history.push(`${lastPath}`)\n    history.replace('/manager-app/home/overview')\n    // submitButton.current.disabled = false;\n  }\n\n\n  return (\n    <div className=\"auth-card\">\n      <form ref={loginForm} onSubmit={onSubmitLoginHandler} autoComplete=\"off\" className=\"auth-card__form\">\n        <h2 className=\"heading-secondary u-margin-bottom-small u-margin-top\">\n          Manager-App\n        </h2>\n        <div className=\"auth-card__form__group\">\n          <input\n            name=\"email\"\n            value={email}\n            onBlur={onBlurHandler}\n            className={`auth-card__form__input ${(!validEmail && typing && leftInputEmail) || (validForm.isValid && !validEmail) ? 'auth__error--input' : ''}`}\n            type=\"email\"\n            onChange={handleInputChange}\n            placeholder=\"Email Address\"\n            id=\"email\" />\n          <label htmlFor=\"email\" className=\"auth-card__form__label\">Email Address</label>\n          {/* <p className=\"auth__error\">The email adress is required</p> */}\n        </div>\n        <div className=\"auth-card__form__group\">\n          <input\n            name=\"password\"\n            value={password}\n            onChange={handleInputChange}\n            onBlur={onBlurHandler}\n            className={`auth-card__form__input ${(!validPassword && typing && leftInputPassword) || (validForm.isValid && !validPassword) ? 'auth__error--input' : ''}`}\n            type=\"password\"\n            placeholder=\"password\"\n            id=\"password\" />\n          <label htmlFor=\"password\" className=\"auth-card__form__label\">Password</label>\n          {/* <p className=\"auth__error\">The password is required</p> */}\n        </div>\n        <div className=\"auth-card__form__group\">\n          <button ref={submitButton} className=\"btn btn--red\" type=\"submit\"> Log in </button>\n        </div>\n        <div className=\"auth-card__form__group u-margin-bottom-small authLink\">\n          <p className=\"paragraph u-center-text\">Don't you have an account?\n          </p>\n          <NavLink activeClassName=\"spanStyle\" to=\"/auth/register\" className=\"paragraph u-center-text\"> Register Now </NavLink>\n\n        </div>\n      </form>\n      <div className=\"auth-card__icon-box log\">\n\n        {/* <img src=\"assets/img/file_type_angular_icon_130754.png\" class=\"auth-card__icon\" alt=\"angular icon\"/> */}\n        <i className=\"fab fa-react auth-card__icon\"></i>\n      </div>\n    </div >\n  )\n}\n","import React, { useContext, useEffect, useMemo, useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useForm, Validatable } from '../../../hooks/useForm';\nimport { AuthContextHook } from '../../../store/authContext/auth-context';\n\nexport const RegisterForm = () => {\n  // const history = useHistory();\n\n  const AuthContext = useContext(AuthContextHook);\n  const {onRegister} = AuthContext;\n\n  const [validName, setValidName] = useState({ isValid: false, leftInput: false })\n  const [validEmail, setValidEmail] = useState({ isValid: false, leftInput: false });\n  const [validPassword, setValidPassword] = useState({ isValid: false, leftInput: false });\n  const [validConfirmPass, setConfirmPass] = useState({ isValid: false, leftInput: false });\n  const [validForm, setValidForm] = useState({ isValid: false, leftIntput: false })\n\n  const { formValues, handleInputChange, customValidator, typing, setTyping } = useForm({ name: '', email: '', password: '', passwordConfirm: '' });\n\n  const { name, email, password, passwordConfirm } = formValues;\n\n  const nameIsValid: Validatable = useMemo(() =>{return {\n    value: name,\n    required: true,\n    minLength: 4,\n  }}, [name])\n  const emailIsValid: Validatable = useMemo(() =>{return {\n    value: email,\n    required: true,\n    type: 'email',\n    minLength: 3,\n  }}, [email])\n \n\n  const passwordIsValid: Validatable = useMemo(() =>{return {\n    value: password,\n    required: true,\n    minLength: 4,\n    maxLength: 15,\n  }}, [password])\n\n  const passwordConfirmIsValid: Validatable = useMemo(() =>{return {\n    value: passwordConfirm,\n    valueCompare: password,\n    required: true,\n    minLength: 4,\n    maxLength: 15,\n  }},[passwordConfirm, password])\n\n  const onBlurHandler = (event: React.FormEvent<HTMLInputElement>) => {\n    const target = event.target as HTMLInputElement\n    const inputElement = target.name;\n    let valid = false;\n    if (inputElement === 'name') {\n      valid = customValidator(nameIsValid);\n      setValidName((prevValue) => {\n        return { leftInput: true, isValid: valid }\n      })\n      setTyping(true)\n    }\n    if (inputElement === 'email') {\n      valid = customValidator(emailIsValid);\n      setValidEmail((prevValue) => {\n        return { leftInput: true, isValid: valid }\n      })\n      setTyping(true)\n\n    }\n    if (inputElement === 'password') {\n      valid = customValidator(passwordIsValid);\n      setValidPassword((prevValue) => {\n        return { leftInput: true, isValid: valid }\n      })\n      setTyping(true)\n    }\n    if (inputElement === 'passwordConfirm') {\n      valid = customValidator(passwordConfirmIsValid);\n      setConfirmPass((prevValue) => {\n        return { leftInput: true, isValid: valid }\n      })\n      setTyping(true)\n    }\n    return valid;\n  }\n\n  useEffect(() => {\n    if (typing) {\n      setValidForm((prev) => {\n        return {\n          ...prev,\n          isValid: false\n        }\n      })\n    }\n    const debounce = setTimeout(() => {\n      // setTyping(true)\n      if (customValidator(nameIsValid) && typing === true) {\n        setValidName((prevValue) => {\n          return { leftInput: true, isValid: true }\n        })\n      }\n      if (customValidator(emailIsValid) && typing === true) {\n        setValidEmail((prevValue) => {\n          return { leftInput: true, isValid: true }\n        })\n      }\n      if (customValidator(passwordIsValid) && typing === true) {\n        setValidPassword((prevValue) => {\n          return { leftInput: true, isValid: true }\n        })\n      }\n      if (customValidator(passwordConfirmIsValid) && typing === true) {\n        setConfirmPass((prevValue) => {\n          return { leftInput: true, isValid: true }\n        })\n      }\n\n    }, 500)\n    return () => {\n      clearTimeout(debounce)\n    }\n  }, [email, password, name, passwordConfirm, customValidator, typing, passwordIsValid, emailIsValid, nameIsValid, passwordConfirmIsValid])\n  const onSubmitRegisterHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (!validName.isValid || !validEmail.isValid || !validPassword.isValid || !validConfirmPass.isValid) {\n      setValidForm((prev) => {\n        return { ...prev, isValid: true }\n      })\n      return;\n    }\n    onRegister(name, email, password, passwordConfirm)\n    // history.replace('/manager-app/home/overview')\n  }\n\n\n  return (\n    <div className=\"auth-card\">\n      <form onSubmit={onSubmitRegisterHandler} autoComplete=\"off\" className=\"auth-card__form auth-card--register\">\n        <h2 className=\"heading-secondary u-margin-bottom-small u-margin-top\">\n          Manager-App\n      </h2>\n        <div className=\"auth-card__form__group \">\n          <input\n            onChange={handleInputChange}\n            onBlur={onBlurHandler}\n            type=\"text\"\n            className={`auth-card__form__input ${(validName.leftInput && !validName.isValid && typing) || (validForm.isValid && !validName.isValid) ? 'auth__error--input' : ''}`}\n            placeholder=\"Name\"\n            name=\"name\"\n            value={name}\n            id=\"name\" />\n          <label\n            htmlFor=\"name\"\n            className=\"auth-card__form__label\"\n          >Name</label>\n          {/* <p className=\"auth__error\" >The name is required</p> */}\n        </div>\n        <div className=\"auth-card__form__group\">\n          <input\n            onChange={handleInputChange}\n            onBlur={onBlurHandler}\n            type=\"email\"\n            value={email}\n            className={`auth-card__form__input ${(!validEmail.isValid && validEmail.leftInput && typing) || (validForm.isValid && !validEmail.isValid) ? 'auth__error--input' : ''}`}\n            name=\"email\"\n            placeholder=\"Email Address\"\n            id=\"email\" />\n          <label htmlFor=\"email\" className=\"auth-card__form__label\">Email Address</label>\n          {/* <p className=\"auth__error\" >The email adress is required</p> */}\n\n        </div>\n        <div className=\"auth-card__form__group\">\n          <input\n            onChange={handleInputChange}\n            onBlur={onBlurHandler} type=\"password\"\n            className={`auth-card__form__input ${(!validPassword.isValid && validPassword.leftInput && typing) || (validForm.isValid && !validPassword.isValid) ? 'auth__error--input' : ''}`}\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            id=\"password\" />\n          <label htmlFor=\"password\" className=\"auth-card__form__label\">Password</label>\n          {/* <p className=\"auth__error\"  >The password is required</p> */}\n\n        </div>\n        <div className=\"auth-card__form__group\">\n          <input\n            onChange={handleInputChange}\n            onBlur={onBlurHandler}\n            type=\"password\"\n            className={`auth-card__form__input ${(!validConfirmPass.isValid && validConfirmPass.leftInput && typing) || (validForm.isValid && !validConfirmPass.isValid) ? 'auth__error--input' : ''}`}\n            placeholder=\"Confirm Password\"\n            value={passwordConfirm}\n            name=\"passwordConfirm\"\n            id=\"passwordConfirm\" />\n          <label htmlFor=\"passwordConfirm\" className=\"auth-card__form__label\">Confirm Password</label>\n          {/* <p className=\"auth__error\"  >The password confirmation is required</p> */}\n          {/* <p className=\"auth__error\">ERROR API</p> */}\n        </div>\n        <div className=\"auth-card__form__group\">\n          <button className=\"btn btn--red\" type=\"submit\"> Sign In </button>\n        </div>\n        <div className=\"auth-card__form__group u-margin-bottom-small authLink\">\n          <p className=\"paragraph u-center-text\">Already registered?\n        </p>\n          <NavLink activeClassName=\"spanStyle\" to=\"/auth/login\" className=\"paragraph u-center-text \"> Log in </NavLink>\n        </div>\n      </form>\n      <div className=\"auth-card__icon-box\">\n        <i className=\"fab fa-react auth-card__icon\"></i>\n\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { LoginForm } from '../../components/authComponents/loginForm/LoginForm'\nimport { RegisterForm } from '../../components/authComponents/registerForm/RegisterForm'\n\nexport const Authorization = () => {\n  return (\n    <div className=\"section__auth\">\n      <Route path=\"/auth/login\" component={LoginForm}></Route>\n      <Route path=\"/auth/register\" component={RegisterForm}></Route>\n    </div>\n  )\n}\n","import { useCallback } from 'react'\nimport { RegisterForm, UpdatePass } from '../interface/app/managerapp'\n\nexport interface WorspaceBodyHTTP {\n  title: string,\n  img: string\n}\nexport interface TodoListHTTP {\n  _id: string\n}\nexport interface NewTodoListHTTPBody {\n  name: string,\n  project: string\n}\n\nexport interface NewTodoHTTPBody {\n  todo: string,\n  todoList:string\n}\n\nexport const useManagerApiHook = () => {\n\n  const managerHTTP = useCallback(async (body: WorspaceBodyHTTP | NewTodoHTTPBody | UpdatePass | FormData | RegisterForm |NewTodoListHTTPBody | TodoListHTTP[\"_id\"] | null, endpoint?: string, request_type = 'GET') => {\n    const API_URL: string = `https://manager-app-v2.herokuapp.com/api/todoapp/v1`\n    \n    // const API_URL: string = `http://localhost:8000/api/todoApp/v1`\n    try {\n      const CONFIG = {\n        method: request_type,\n        body: (body === null) ? null : JSON.stringify(body),\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json',\n          'Authorization': localStorage.getItem('reactBearer')!\n        }\n      }\n      const request = await fetch(`${API_URL}/${endpoint}`, CONFIG);\n      const response = await request.json();\n      return response;\n    } catch (error) {\n      throw error;\n    }\n\n\n  }, [])\n  return { managerHTTP }\n}\n","import React, { createContext, ReactChildren, useCallback, useState } from 'react'\nimport { useManagerApiHook, WorspaceBodyHTTP } from '../../hooks/useManagerApiHook';\nimport { Workspace, WorkspaceResponse } from '../../interface/app/managerapp';\n\nexport const ManagerContextHook = createContext<{\n  workspaces: Workspace[];\n  onGetWorkspaces: () => void;\n  onCreateWorkspaces: (body: {title: string, img: string}) => void;\n  onSetTheme: () => void;\n  onCheckTokenManager: () => void;\n}>({\n  workspaces: [],\n  onGetWorkspaces: ()=> {},\n  onCreateWorkspaces: (body: {title: string, img: string})=>{},\n  onSetTheme:()=>{},\n  onCheckTokenManager:()=> {}\n})\n\n\n\n\nexport const ManagerAppContextProvider = ({children}: {children: ReactChildren | any}) => {\n\n  const {managerHTTP} = useManagerApiHook();\n\n  const [workspaces, setWorkspaces] = useState<Workspace[]>([]);\n\n  const getWorkspaces = useCallback(async () => {\n    const responseManager:WorkspaceResponse = await managerHTTP(null, 'workspace', 'GET');\n    setWorkspaces(responseManager.workspace)\n  }, [managerHTTP])\n  \n  const createWorkspace = async (body: {title: string, img: string}) => {\n    const bodyRequest:WorspaceBodyHTTP = {\n      title: body.title,\n      img: body.img\n    }\n    const managerResponse = await managerHTTP (bodyRequest, 'workspace', 'POST');\n    setWorkspaces(managerResponse.workspace)\n  }\n\n  const setTheme = async () => {\n\n  }\n\n  const checkTokenOnRefresh = async () => {\n\n  }\n\n  return (\n    <ManagerContextHook.Provider value={{\n      workspaces: workspaces,\n      onGetWorkspaces: getWorkspaces,\n      onCreateWorkspaces: createWorkspace,\n      onSetTheme: setTheme,\n      onCheckTokenManager:checkTokenOnRefresh\n    }}>\n      {children}\n    </ManagerContextHook.Provider>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/user-img-default.77d7ec1d.png\";","import React, { useContext } from 'react'\nimport { Link, NavLink } from \"react-router-dom\";\nimport ProfilePic from '../../../assets/img/user-img-default.png'\nimport { AuthContextHook } from '../../../store/authContext/auth-context';\n\nexport const Navbar = () => {\n\n  const AuthContext = useContext(AuthContextHook);\n\n  const {onLogout, user} = AuthContext;\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar__logo-box\">\n        <Link to=\"/manager-app/home/overview\" className=\"navbar__link\">\n          <i className=\"navbar__logo fab fa-pied-piper-square\"></i>\n        </Link>\n        <div className=\"workspace__name\">\n          <span>{user.name}</span>\n        </div>\n      </div>\n      <div className=\"navbar__list\">\n        <NavLink className=\"navbar__list-item\" activeClassName=\"active-link-nav\" to=\"/manager-app/home/overview\">\n          <i className=\"navbar__list-item-icon--logout fas fa-home\"></i>\n        </NavLink>\n\n        <NavLink className=\"navbar__list-item\" activeClassName=\"active-link-nav\" to=\"\">\n          <i className=\"navbar__list-item-icon--settings fas fa-edit\"></i>\n        </NavLink>\n\n        <NavLink className=\"navbar__list-item\" activeClassName=\"active-link-nav\" to=\"/manager-app/profile\">\n          <img className=\"navbar__list-item-user-photo\" src={user.img ? user.img : ProfilePic} alt=\"profile\"/>\n        </NavLink>\n\n        <NavLink onClick={onLogout} className=\"navbar__list-item\" activeClassName=\"active-link-nav\"  to=\"/auth/login\">\n          <i className=\"navbar__list-item-icon--logout fas fa-sign-out-alt\"></i>\n        </NavLink>\n\n      </div>\n\n    </nav>\n  )\n}\n","import React, { useRef, useState } from 'react'\nimport { RouteComponentProps } from 'react-router-dom';\n\nexport const AddWorkspace = ({ history ,addWorkspace }: { history: RouteComponentProps['history'], addWorkspace: (bodyRequest: {title: string, img: string}) => void }) => {\n\n  const titleInput = useRef<HTMLInputElement>(null);\n  const cardList = useRef<HTMLUListElement>(null);\n  const [error, setError] = useState(false);\n  const [theme, setTheme] = useState<string>('iksgsorgjrltr65cs8gq')\n\n\n  \n  const submitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setError(false)\n    if(titleInput.current?.value.trim().length! > 2) {\n      const body = {\n        title: titleInput.current!.value,\n        img: theme\n      }\n      addWorkspace(body)\n      history.push('/manager-app/home/overview');\n    } else {\n      setError(true);\n    }\n  }\n\n  const onSetTheme = (event: React.MouseEvent) => {\n    const currentElement = event.target as HTMLLIElement;\n    const themeCard = currentElement.closest('.workspace-card') as HTMLLIElement;\n    setTheme(themeCard.getAttribute('data-theme')!);\n    setOutline(themeCard.id);\n  }\n\n  const setOutline = (cardId:string) => {\n    cardList.current?.childNodes.forEach((el) => {\n      const liItem = el as HTMLLIElement;\n      liItem.classList.remove('selectedCard')\n      if(liItem.id === cardId) {\n        return liItem.classList.add('selectedCard');\n      }\n    })\n  }\n\n  return (\n    <div className=\"grid__add\">\n      <div className=\"grid__heading\">\n        <h2>CREATE A WORKSPACE</h2>\n      </div>\n      <div className=\"add__form\">\n        <form onSubmit={submitHandler} className=\"workspace-form\">\n          <div className=\"form-group\" >\n            <input\n              ref={titleInput}\n              type=\"text\"\n              name='title'\n              id=\"title\"\n              autoFocus={true}\n              className=\"workspace-form__title-input\" />\n            <label htmlFor=\"title\" className=\"workspace-form__title-label\"></label>\n            {error && <p className=\"error-form\"> The name is required </p>}\n          </div>\n          <div className=\"form-group\">\n            <p className=\"workspace-form__title-label\">Select a theme</p>\n            <ul ref={cardList} onClick={onSetTheme} className=\"grid__workspace grid__workspace--add\">\n              <li id=\"iksgsorgjrltr65cs8gq\" data-theme=\"https://res.cloudinary.com/dlm1qwk4g/image/upload/v1617284918/iksgsorgjrltr65cs8gq.jpg\" className=\"workspace-card workspace-card--1\"></li>\n              <li id=\"ogjwagrcqyvf4xcphg64\" data-theme=\"https://res.cloudinary.com/dlm1qwk4g/image/upload/v1617284917/ogjwagrcqyvf4xcphg64.jpg\" className=\"workspace-card workspace-card--2\"></li>\n              <li id=\"vg4ti2cc9b23yzyvxkom\" data-theme=\"https://res.cloudinary.com/dlm1qwk4g/image/upload/v1617284917/vg4ti2cc9b23yzyvxkom.jpg\" className=\"workspace-card workspace-card--3\"></li>\n              <li id=\"epdqoodzp24aecddjcjf\" data-theme=\"https://res.cloudinary.com/dlm1qwk4g/image/upload/v1617284917/epdqoodzp24aecddjcjf.jpg\" className=\"workspace-card workspace-card--4\"></li>\n              <li id=\"dj3mofltuo74qnjcfsgj\" data-theme=\"https://res.cloudinary.com/dlm1qwk4g/image/upload/v1617284917/dj3mofltuo74qnjcfsgj.jpg\" className=\"workspace-card workspace-card--5\"></li>\n              <li id=\"hdcfionelybyd10nexrw\" data-theme=\"https://res.cloudinary.com/dlm1qwk4g/image/upload/v1617284917/hdcfionelybyd10nexrw.jpg\" className=\"workspace-card workspace-card--6\"></li>\n            </ul>\n          </div>\n          <button className=\"btn btn--red btn--add\">CREATE WORKSPACE</button>\n\n        </form>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nexport const WorkspaceCard = ({title, id, img}:{title:string,id:string, img:string}) => {\n  return (\n    <Link to={'/manager-app/workspace/' + id} id={id} className=\"workspace-card\">\n      <span className=\"workspace-card__title\">{title}</span>\n      <img src={img} className=\"workspace-card__img\" alt=\"back\"/>\n    </Link>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Workspace } from '../../../interface/app/managerapp'\nimport { WorkspaceCard } from '../../shared/workspaceCard/WorkspaceCard'\n\nexport const SearchWorkspace = ({ workspaces }: { workspaces: Workspace[] }) => {\n\n  const [search, setSearch] = useState<string>('')\n  const [noFound, setNoFound] = useState(false);\n  const [filteredSpaces, setFilteredSpaces] = useState([...workspaces])\n  const [searching, setSearching] = useState(false)\n  const searchHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNoFound(false)\n    setSearching(true)\n    setSearch(event.target.value)\n  }\n  useEffect(() => {\n    const timeSearch = setTimeout(()=> {\n      setSearching(false);\n    }, 1000)\n    setFilteredSpaces((filteredPrev) => {\n      return [...workspaces].filter(workspace => {\n        setSearching(false)\n        if(!filteredSpaces.length) {\n          setNoFound(true)\n        }\n        return workspace.title.toLowerCase().includes(search!.trim())\n      })\n    })\n    return () => {\n      clearInterval(timeSearch)\n    }\n  }, [search, workspaces, filteredSpaces.length])\n\n  return (\n    <>\n      <div className=\"grid__search\">\n        <div className=\"search-group\">\n          <input\n            type=\"text\"\n            onChange={searchHandler}\n            value={search}\n            name='search'\n            autoComplete=\"off\"\n            placeholder=\"Search...\"\n            id=\"search\"\n            autoFocus={true}\n            className=\"workspace-form__title-input\" />\n          <label className=\"workspace-form__title-label\" htmlFor=\"search\">Search...</label>\n          {noFound && <p className=\"search__fail\">ERROR PLACEHOLDER</p>}\n          {!workspaces.length && <p className=\"message-empty\" style={{ textAlign: 'center' }}>\n            YOU DON'T HAVE A CREATED A WORKSPACE YET\n          </p>}\n        </div>\n        {searching && <div className=\"grid__workspace\">\n          <div className=\"loading\">\n            <i className=\"fas fa-sync fa-spin\"></i>\n          </div>\n        </div>}\n        <div className=\"grid__workspace\">\n          {\n            filteredSpaces.map(workCard => {\n              return <WorkspaceCard key={workCard._id} id={workCard._id} title={workCard.title} img={workCard.img} />\n            })\n          }\n\n        </div>\n      </div>\n\n    </>\n  )\n}\n","import React from 'react'\nimport { Workspace } from '../../../interface/app/managerapp'\nimport { WorkspaceCard } from '../../shared/workspaceCard/WorkspaceCard'\n\nexport const WorkspacesAll = ({ workspaces }: { workspaces: Workspace[] }) => {\n  return (\n    <>\n      <div className=\"grid__workspace\">\n        {!workspaces.length && <div className=\"workspace-empty\">\n\n          <div className=\"welcome\">\n            <h2 className=\"heading-secondary\"> Welcome to Manager-APP PEPE, </h2>\n            <p className=\"paragraph\">Manager App is a simple project that I have developed to put in practise different technologies and frameworks like Node, MongoDB, NoSql, Express, Mongoose, JavaScript, TypeScript, Angular & React.\n            Please play around, the app is responsive and is connected to my API.\n        </p>\n            <br />\n          </div>\n          <div className=\"steps\">\n            <h3 className=\"heading-tertiary steps--1\">To start</h3>\n            <p className=\"paragraph steps--1-description\">\n              Create or click on a workspace if you have already created one. It will redirect you to your new Space.\n          </p>\n            <br />\n            <h3 className=\"heading-tertiary steps--2\">On your new Workspace</h3>\n            <p className=\"paragraph steps--2-description\">\n              You can add cards. These cards work as an individual to do list. <br />\n          You can delete them, update them, drag them and drop them.\n          </p>\n          </div>\n        </div>}\n        {workspaces.map(workCard => {\n          return <WorkspaceCard key={workCard._id} id={workCard._id} img={workCard.img} title={workCard.title} />\n        })}\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nexport const Sidebar = () => {\n\n  return (\n    <nav className=\"sidebar\">\n      <ul className=\"sidebar-nav\">\n        <NavLink exact to=\"/manager-app/home/overview\"\n          activeClassName=\"router-link-active\"\n          className=\"sidebar-nav__item\">\n          <span>WORKSPACES</span>\n        </NavLink>\n        <NavLink to=\"/manager-app/home/search\"\n          activeClassName=\"router-link-active\"\n          className=\"sidebar-nav__item\">\n          <span>FILTER</span>\n        </NavLink>\n        <NavLink to=\"/manager-app/home/add\"\n          activeClassName=\"router-link-active\"\n          className=\"sidebar-nav__item\">\n          <span>ADD</span>\n        </NavLink>\n      </ul>\n\n    </nav>\n  )\n}\n","import React, { ReactChild, ReactChildren } from 'react'\n\nexport const DynamicContainer = ({children}:{children: ReactChildren | ReactChild}) => {\n  return (\n    <div className=\"dashboard-outlet\">\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { AddWorkspace } from '../../../components/managerAppComponents/createWorkspace/AddWorkspace'\nimport { SearchWorkspace } from '../../../components/managerAppComponents/Search/SearchWorkspace'\nimport { WorkspacesAll } from '../../../components/managerAppComponents/workspacesAll/WorkspacesAll'\nimport { Sidebar } from '../../../components/shared/sidebar/Sidebar'\nimport { Workspace } from '../../../interface/app/managerapp'\nimport { DynamicContainer } from '../../../layout/dynamicContainer/DynamicContainer'\n\n\n// export const HomePage = ()=> {\nexport const HomePage = ({workspaces, addWorkspace}:{workspaces:Workspace[], addWorkspace:()=> void}) => {\n\n  return (\n    <>\n    <div className=\"section-home\">\n      <div className=\"main-dashboard\">\n        <div className=\"main-content-dashboard\">\n        <Sidebar></Sidebar>\n        <DynamicContainer>\n          <Switch>\n            <Route exact path='/manager-app/home/overview' component={(props:any)=> <WorkspacesAll workspaces={workspaces} {...props}/>}></Route>\n            <Route exact path=\"/manager-app/home/search\" component={(props:any) => <SearchWorkspace workspaces={workspaces} {...props}/>}></Route>\n            <Route exact path=\"/manager-app/home/add\" component={(props:any)=> <AddWorkspace addWorkspace={addWorkspace} {...props}/>}></Route>\n          </Switch>\n        </DynamicContainer>\n        </div>\n      </div>\n    </div>\n    </>\n  )\n}\n","\nimport { RegisterForm, UpdatedUserResponse, UpdatePass } from '../interface/app/managerapp'\nimport { useManagerApiHook } from './useManagerApiHook'\nexport const useUserProfileApi = () => {\n  const { managerHTTP } = useManagerApiHook()\n\n  const patchUserData = async (form: RegisterForm) => {\n    const bodyRequest = form;\n    const managerResponse: UpdatedUserResponse = await managerHTTP(bodyRequest, `users`, 'PATCH');\n  }\n\n  const updatePassword = async (form: UpdatePass) => {\n    const bodyRequest = form;\n    const managerResponse = await managerHTTP(bodyRequest, `users/resetPass`, 'PATCH');\n    console.log(managerResponse)\n  }\n\n  const updateProfilePicture = async (file:File) => {\n    const formData = new FormData();\n    formData.append('file', file, file.name)\n    const CONFIG = {\n      method: 'POST',\n      body: formData,\n      headers: {\n        'Authorization': localStorage.getItem('reactBearer')!\n      }\n\n    }\n    try {\n      const request = await fetch(`http://localhost:8000/api/todoApp/v1/upload/users`, CONFIG)\n      const response = await request.json();\n      return response\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return { patchUserData, updatePassword, updateProfilePicture };\n}\n","import React, { useContext, useState } from 'react'\nimport { useForm, Validatable } from '../../../hooks/useForm';\nimport { useUserProfileApi } from '../../../hooks/useUserProfileApi';\nimport { RegisterForm } from '../../../interface/app/managerapp';\nimport { AuthContextHook } from '../../../store/authContext/auth-context';\n\nexport const ProfileForm = ({ classes, onShow, onHide, onContent }: { classes: string, onShow:()=>void, onHide:()=>void, onContent:(notificationOPT: { text: string, icon: string })=>void }) => {\n  const AuthContext = useContext(AuthContextHook);\n  const { user } = AuthContext;\n  const [error, setError] = useState(false);\n  const { patchUserData } = useUserProfileApi();\n  const { formValues, handleInputChange, customValidator } = useForm<RegisterForm>({\n    name: user.name!,\n    email: user.email!,\n    password: ''\n  });\n  const { name, email, password } = formValues;\n\n  const nameIsValid: Validatable = {\n    value: name,\n    required: true,\n    minLength: 4,\n  }\n  const emailIsValid: Validatable = {\n    value: email,\n    required: true,\n    type: 'email',\n    minLength: 3,\n  }\n\n\n  const passwordIsValid: Validatable = {\n    value: password,\n    required: true,\n    minLength: 4,\n    maxLength: 15,\n  }\n  const submitProfileHandler = async (event: React.FormEvent) => {\n    event.preventDefault();\n    if (!customValidator(nameIsValid) || !customValidator(emailIsValid) || !customValidator(passwordIsValid)) {\n      setError(true)\n      return;\n    }\n    const form = {\n      name,\n      email,\n      password\n    }\n\n    const content = {text: 'User data updated sucesfully', icon:'far fa-check-circle' }\n    try {\n      await patchUserData(form);\n      onShow()\n      onContent(content)\n      setTimeout(()=> {\n        onHide()\n      },1000)\n    } catch (error) {\n      content.text = 'Wuops something went wrong';\n      content.icon = 'fas fa-exclamation-circle'\n      onShow()\n      onContent(content)\n      setTimeout(()=> {\n        onHide()\n      },1000)\n    }\n\n  }\n\n\n  return (\n    <div className={classes}>\n      <form onSubmit={submitProfileHandler} className=\"profile-form__form\">\n        <div className=\"profile-form__form__group\">\n          <h2>PROFILE CONTENT</h2>\n          <label htmlFor=\"name\" className=\"profile-form__form__label\">Name</label>\n          <input\n            name=\"name\"\n            id=\"name\"\n            onChange={handleInputChange}\n            value={name}\n            type=\"text\"\n            className=\"profile-form__form__input\"\n            placeholder=\"MR.Patata\"\n          />\n          {(!customValidator(nameIsValid) && error) && <p className=\"error-form\">The name is required</p>}\n        </div>\n        <div className=\"profile-form__form__group\">\n          <label htmlFor=\"email\" className=\"profile-form__form__label\">Email Address</label>\n          <input\n            type=\"text\"\n            className=\"profile-form__form__input\"\n            placeholder=\"patata@gmail.com\"\n            id=\"email\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={email}\n          />\n          {(!customValidator(emailIsValid) && error) && <p className=\"error-form\">The email adress is required</p>}\n        </div>\n        <div className=\"profile-form__form__group\">\n          <label htmlFor=\"password\" className=\"profile-form__form__label\">Password</label>\n          <input\n            type=\"password\"\n            className=\"profile-form__form__input\"\n            placeholder=\"Password\"\n            id=\"password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={password}\n          />\n          {(!customValidator(passwordIsValid) && error) && <p className=\"error-form\">The password  is required</p>}\n\n        </div>\n        <div className=\"profile-form__form__group\">\n          <button className=\"btn btn--red\" type=\"submit\">UPDATE</button>\n        </div>\n      </form>\n\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useForm, Validatable } from '../../../hooks/useForm';\nimport { useUserProfileApi } from '../../../hooks/useUserProfileApi';\n\n\nexport const ProfileFormPassword = ({ classes, onShow, onHide, onContent }: { classes: string, onShow: () => void, onHide: () => void, onContent: (notificationOPT: { text: string, icon: string }) => void }) => {\n  const [error, setError] = useState(false);\n  const { updatePassword } = useUserProfileApi();\n  const { formValues, handleInputChange, customValidator } = useForm({\n    password: '',\n    passwordReset: '',\n    passwordConfirm: '' \n\n  });\n\n  const { password, passwordConfirm, passwordReset } = formValues;\n\n  const passwordIsValid: Validatable = {\n    value: passwordReset,\n    required: true,\n    minLength: 4,\n    maxLength: 15,\n  }\n  const passwordResetIsValid: Validatable = {\n    value: passwordReset,\n    required: true,\n    minLength: 4,\n    maxLength: 15,\n  }\n  const passwordConfirmIsValid: Validatable = {\n    value: passwordConfirm,\n    valueCompare: passwordReset,\n    required: true,\n    minLength: 4,\n    maxLength: 15,\n  }\n  const submitProfileHandler = async (event: React.FormEvent) => {\n    event.preventDefault();\n    if (!customValidator(passwordIsValid) || !customValidator(passwordResetIsValid) || !customValidator(passwordConfirmIsValid)) {\n      setError(true)\n      return;\n    }\n    const form = {\n      password: password,\n      passwordReset: passwordReset,\n      passwordConfirm: passwordConfirm\n    }\n    const content = {text: 'Password Sucesfully updated', icon:'far fa-check-circle' }\n\n    try {\n      await updatePassword(form);\n      onShow()\n      onContent(content)\n      setTimeout(()=> {\n        onHide()\n      },1000)\n    } catch (error) {\n      content.text = 'Wuops something went wrong';\n      content.icon = 'fas fa-exclamation-circle'\n      onShow()\n      onContent(content)\n      setTimeout(()=> {\n        onHide()\n      },1000)\n    }\n  }\n\n  return (\n    <div className={classes}>\n      <form onSubmit={submitProfileHandler} className=\"profile-form__form\">\n        <div className=\"profile-form__form__group\">\n          <h2>RESET PASSWORD</h2>\n          <label htmlFor=\"password\" className=\"profile-form__form__label\">Current Password</label>\n          <input name=\"password\" value={password} onChange={handleInputChange} type=\"password\" className=\"profile-form__form__input\" placeholder=\"Password\" id=\"password\" />\n          {!customValidator(passwordIsValid) && error && <p className=\"error-form\"> The current password is required</p>}\n        </div>\n        <div className=\"profile-form__form__group\">\n\n          <label htmlFor=\"password\" className=\"profile-form__form__label\">New Password</label>\n          <input\n            type=\"password\"\n            className=\"profile-form__form__input\"\n            placeholder=\"Password\"\n            id=\"passwordReset\"\n            name=\"passwordReset\" value={passwordReset} onChange={handleInputChange}\n          />\n          {!customValidator(passwordResetIsValid) && error && <p className=\"error-form\">The new password  is required</p>}\n\n        </div>\n        <div className=\"profile-form__form__group\">\n          <label htmlFor=\"passwordConfirm\" className=\"profile-form__form__label\">Confirm Password</label>\n          <input\n            type=\"password\"\n            className=\"profile-form__form__input\"\n            placeholder=\"Confirm Password\"\n            name=\"passwordConfirm\" value={passwordConfirm} onChange={handleInputChange}\n            id=\"passwordConfirm\" />\n          {!customValidator(passwordConfirmIsValid) && error && <p className=\"error-form\">The password confirmation doesnt match with the provided password</p>}\n\n        </div>\n        <div className=\"profile-form__form__group\">\n          <button className=\"btn btn--red\" type=\"submit\">UPDATE PASSWORD</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n","\nimport React, { useContext, useRef } from 'react'\nimport ProfilePic from '../../../assets/img/user-img-default.png'\nimport { useUserProfileApi } from '../../../hooks/useUserProfileApi'\nimport { AuthContextHook } from '../../../store/authContext/auth-context'\nexport const ProfilePhoto = ({ classes, onShow, onHide, onContent }:{classes:string, onShow:()=>void, onHide:()=>void, onContent:(notificationOPT: { text: string, icon: string })=>void}) => {\n  const AuthContext = useContext(AuthContextHook);\n  const {user} = AuthContext;\n  const {updateProfilePicture} = useUserProfileApi();\n  const image = useRef<HTMLImageElement>(null)\n  const stylesPic = {\n    backgroundImage: `url(\"${user.img ? user.img : ProfilePic}\")`,\n    backgroundSize: 'cover',\n    backgorundPosition : 'center',\n    borderRadius: '50%'\n  }\n\n  const loadImageHandler = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    if(event.target.files){\n      const reader = new FileReader();\n      reader.readAsDataURL(event.target.files[0])\n      reader.onload = (event) => {\n        image.current!.src = `${event.target!.result}`;\n      }\n      const content = {text: 'Picture sucessfully updated', icon:'far fa-check-circle' }\n      try {\n        const response = await updateProfilePicture(event.target.files[0]);\n        user.img = response.url;\n        onShow()\n        onContent(content)\n        setTimeout(()=> {\n          onHide()\n        },1000)\n      } catch (error) {\n        content.text = 'Wuops something went wrong';\n        content.icon = 'fas fa-exclamation-circle'\n        onShow()\n        onContent(content)\n        setTimeout(()=> {\n          onHide()\n        },1000)\n      }\n    }\n  }\n\n  return (\n    <div className={classes}>\n      <div ref={image}  style={stylesPic}/>\n      <input type=\"file\" onChange={loadImageHandler} className=\"profile-picture__file\"/>\n      <i className=\"fas fa-camera\"></i>\n    </div>\n  )\n}\n","import React from 'react'\nimport { ProfileForm } from '../../../components/managerAppComponents/profileForm/ProfileForm'\nimport { ProfileFormPassword } from '../../../components/managerAppComponents/profileForm/ProfileFormPassword'\nimport { ProfilePhoto } from '../../../components/managerAppComponents/profileForm/ProfilePhoto'\nimport { NotificationCmp } from '../../../components/shared/notifications/Notification'\nimport { useNotification } from '../../../hooks/useNotification'\n\nexport const Profife = () => {\n  const {showNotificationHandler, hideNotificationHandler, notificationContentHandler, notificationIsShow, notificationContent} = useNotification();\n\n  return (\n    <>\n\n    {notificationIsShow && <NotificationCmp notificationContent={notificationContent}/>}\n    <div className=\"section-profile\">\n      <div className=\"profile-menu\">\n        <div className=\"profile-content\">\n          <div className=\"profile-content-display\">\n            <ProfilePhoto onShow={showNotificationHandler} onHide={hideNotificationHandler} onContent={notificationContentHandler} classes=\"profile-picture\" />\n          </div>\n          <ProfileForm onShow={showNotificationHandler} onHide={hideNotificationHandler} onContent={notificationContentHandler} classes=\"profile-form\" />\n          <ProfileFormPassword onShow={showNotificationHandler} onHide={hideNotificationHandler} onContent={notificationContentHandler} classes=\"profile-form\" />\n        </div>\n      </div>\n    </div>\n    </>\n  )\n}\n","\nimport { useCallback } from 'react'\nimport { TodoListResponse, NewTodoListResponse, AddTodoResponse } from '../interface/app/managerapp'\nimport { useManagerApiHook, TodoListHTTP } from './useManagerApiHook'\nexport const useTodoListsApi = () => {\n\n  const { managerHTTP } = useManagerApiHook()\n\n  const getTodoListsById = useCallback(async (workspaceID: TodoListHTTP[\"_id\"]) => {\n    const responseManager: TodoListResponse = await managerHTTP(null, `todoList/${workspaceID}`, 'GET');\n    if (responseManager.status === 'success') {\n      return responseManager.todoList;\n    }\n    if (responseManager.status === 'fail') {\n      throw new Error('There was a problem with the request');\n    }\n  }, [managerHTTP])\n\n\n  const addNewTodoList = async (val: string, workspaceID: string) => {\n    const bodyRequest = { name: val, project: workspaceID }\n    const responseManager: NewTodoListResponse = await managerHTTP(bodyRequest, 'todoList', 'POST');\n    if (responseManager.status === 'success') {\n      return responseManager.newTodoList;\n    }\n  }\n\n  const deleteToDoList = async (todoListId:string) => {\n    await managerHTTP(null, `todoList/${todoListId}`, 'DELETE');\n  }\n\n  const addNewTodo = async (val: string, todoListID: string) => {\n    const bodyRequest = { todo: val, todoList: todoListID }\n    const responseManager: AddTodoResponse = await managerHTTP(bodyRequest, 'todo', 'POST');\n    if (responseManager.status === 'success') {\n      return responseManager.newTodo;\n    }\n  }\n\n  const updateStatusTodo = async (todoID:string) => {\n    const responseManager = await managerHTTP(null, `todo/isDone/${todoID}`, 'GET');\n    if(responseManager.status === 'success'){\n      return responseManager.todoDone.done;\n    }\n  }\n\n  const dragAndDropTodo = async (todoID:string, todoListID:string) => {\n    try {\n      await managerHTTP(null, `todo/${todoID}/${todoListID}`, 'PATCH');\n      \n    } catch (error) { \n      console.log(error)\n    }\n  }\n\n\n\n  return { getTodoListsById, addNewTodoList, addNewTodo, updateStatusTodo, deleteToDoList, dragAndDropTodo }\n}\n","import React, { useState } from 'react'\nimport { useForm } from '../../../hooks/useForm';\nimport { useTodoListsApi } from '../../../hooks/useTodoListsApi';\ninterface Todo {\n \n  id: string,\n  currValue: string,\n  done: boolean\n}\nexport const TodoItem = ({ id, currValue, done }: Todo) => {\n\n  const { updateStatusTodo } = useTodoListsApi()\n  const [isDone, setIsDone] = useState(done);\n\n  const onIsDone = async () => {\n    const response = await updateStatusTodo(id);\n    setIsDone(response)\n\n  }\n  const dragStartHandler = (event: React.DragEvent) => {\n    event.dataTransfer.setData('text/plain', id);\n    event.dataTransfer.effectAllowed = 'move';\n  }\n\n\n  const { formValues: todoContent, handleInputChange: handleTodoChange } = useForm({ todoText: currValue });\n  const { todoText } = todoContent;\n\n  return (\n    <li draggable={true} onDragStart={dragStartHandler} className=\"todoList-card__body__item\">\n      <input  value={todoText} name=\"todoText\" onChange={handleTodoChange} id={id} type=\"text\" className=\"todo\" />\n      {isDone && <i onClick={onIsDone} className=\"far fa-check-square checkbox\"></i>}\n      {!isDone && <i onClick={onIsDone} className=\"far fa-square done checkbox\"></i>}\n    </li>\n  )\n}\n","import React, { useRef, useState } from 'react'\nimport { useForm } from '../../../hooks/useForm'\nimport { useTodoListsApi } from '../../../hooks/useTodoListsApi';\nimport { Todo } from '../../../interface/app/managerapp'\nimport { TodoItem } from '../todoItem/TodoItem';\n\ninterface TodoListCardContent {\n \n  onModalControlHandler: () => void,\n  onUpdate: ()=> Promise<unknown>,\n  id: string,\n  project: {\n    _id: string,\n    title: string\n  },\n  todos: Todo[],\n  titleTodoList: string,\n  onSetTodoListID: React.Dispatch<React.SetStateAction<string | undefined>>\n\n}\n\nexport const TodoListCard = ({ onUpdate, onModalControlHandler, onSetTodoListID, id, project, todos, titleTodoList }: TodoListCardContent) => {\n\n  const { addNewTodo, dragAndDropTodo } = useTodoListsApi();\n  const [todosCard, setTodosCard] = useState(todos)\n\n  const onAddNewTodo = async (val: string, todoListID: string): Promise<void> => {\n    const response = await addNewTodo(val, todoListID)\n    setTodosCard(prevTodos => {\n      return [...prevTodos, response!]\n    })\n  }\n  const { formValues, handleInputChange } = useForm({ title: titleTodoList });\n  const { title } = formValues;\n  const newTodoText = useRef<HTMLInputElement>(null!);\n\n  const handleAddSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    if (newTodoText.current.value.trim().length > 2) {\n      await onAddNewTodo(newTodoText.current.value!, id);\n      await onUpdate();\n      newTodoText.current.value = '';\n    }\n  }\n\n\n  // DRAG & DROP AREA\n  const todoListRef = useRef<HTMLDivElement>(null)\n  const dragOverHandler = (event:React.DragEvent) => {\n    if(event.dataTransfer && event.dataTransfer.types[0] === 'text/plain') {\n      event.preventDefault();\n      todoListRef.current?.classList.add('drop-drop');\n    }\n  }\n  const dragLeaveHandler = (event:React.DragEvent) => {\n    if(event.dataTransfer && event.dataTransfer.types[0] === 'text/plain') {\n      event.preventDefault();\n      todoListRef.current?.classList.remove('drop-drop');\n    }\n  }\n  const dropHandler = async (event:React.DragEvent) => {\n    todoListRef.current?.classList.remove('drop-drop');\n    const currentTodoID = event.dataTransfer.getData('text/plain');\n    await onUpdate();\n    await dragAndDropTodo(currentTodoID, id)\n  }\n  return (\n\n    <div ref={todoListRef} data-id={id} className=\"todoList-card card-grid\" onDragOver={dragOverHandler} onDragLeave={dragLeaveHandler} onDrop={dropHandler}>\n      <div className=\"todoList-card__head\">\n        <input type=\"text\" onChange={handleInputChange} value={title} name=\"name\" className=\"todoList-card__head__title\" />\n        <i onClick={() => { onModalControlHandler(); onSetTodoListID(id) }} className=\"fas fa-trash-alt\"></i>\n      </div>\n      <ul className=\"todoList-card__body\">\n        {todosCard.length !== 0 && todosCard.map((todo: Todo | any) => {\n          return <TodoItem  key={todo._id} id={todo._id} done={todo.done} currValue={todo.todo} />\n        })}\n      </ul>\n      <div className=\"todoList-card__add__item\">\n        <form onSubmit={handleAddSubmit}>\n          <div className=\"add-wrap\">\n            <input ref={newTodoText} placeholder=\"Add Todo\" type=\"text\" autoFocus={true} className=\"todoList-card__add-item__input\" />\n            <span className=\"fas fa-pencil-alt\"></span>\n          </div>\n          <button className=\"btn btn--todoList\" type=\"submit\">Add Task</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n","import React, { Fragment} from 'react'\n\nexport const Modal = ({onClose, onDeleteTodoList}:{onClose:()=>void, onDeleteTodoList:()=> void}) => {\n  return (\n    <Fragment>\n      <div onClick={onClose}  className=\"overlay\"></div>\n      <div  className=\"modal\">\n        <div className=\"modal-content\">\n          <div className=\"modal-close\">\n            <i>X</i>\n          </div>\n          <div className=\"modal__title\">\n            <h3 className=\"modal__heading\">\n\n              Are you sure about this?\n          </h3>\n          </div>\n          <div className=\"modal__body\">\n            <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Cumque exercitationem vero veritatis. Ducimus dolore harum, tempore facere error fugit accusamus.</p>\n          </div>\n          <div className=\"modal__button\">\n            <button onClick={onDeleteTodoList} className=\"btn modal__button--confirm\">CONFIRM</button>\n            <button onClick={onClose} className=\"btn modal__button--cancel\">CANCEL</button>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport {useParams} from 'react-router-dom'\nimport { TodoListCard } from '../../../components/managerAppComponents/todoListCard/TodoListCard';\nimport { TodoLists, Workspace } from '../../../interface/app/managerapp';\nimport {useTodoListsApi} from '../../../hooks/useTodoListsApi'\nimport { Modal } from '../../../components/shared/modal/Modal';\nexport const WorkspaceView = ({workspaces}:{workspaces:Workspace[]}) => {\n\n  const {deleteToDoList} = useTodoListsApi();\n  const [update, setUpdate] = useState<boolean>();\n  const {workspaceID}= useParams<{workspaceID:string}>();\n  const {getTodoListsById, addNewTodoList} = useTodoListsApi();\n  const newListTitle = useRef<HTMLInputElement>(null)\n  const [todoLists, setTodoLists] = useState<TodoLists[]>([])\n  const [todoListID, setTodoListID] = useState<string>();\n  const currentWorkspace:Workspace = [...workspaces].find(workSpc=> workSpc._id === workspaceID)!;\n  const workspaceBackgroundStyle = {\n    backgroundImage: `url('${currentWorkspace?.img}')`,\n    backgroundSize: 'cover',\n    bacgroundPosition: 'top'\n    }\n  const [modalIsShown, setModalIsShown] = useState(false)\n\n  const modalControlHandler = () => {\n    setModalIsShown(!modalIsShown)\n  }\n  const confirmTodoListDeleteModal = async () => {\n    await deleteToDoList(todoListID!);\n    setTodoLists((prevTodoLists:TodoLists[])=> {\n      return [...prevTodoLists.filter(todoLists => todoLists._id !== todoListID)]\n    })\n    modalControlHandler();\n  }\n  const updateHandler =  () => {\n    return new Promise((res, rej) => {\n      res(setUpdate(!update))\n    })\n  }\n\n  const onAddNewList = async (val: string) => {\n    const response = await addNewTodoList(newListTitle.current!.value, workspaceID)\n    if(!response?.todos) {\n      response!.todos = [];\n    }\n    setTodoLists((prevTodoLists => {\n      return [...prevTodoLists, response!]\n    }))\n  }\n  const handleAddNewList = async (event:React.FormEvent) => {\n    event.preventDefault();\n    if(newListTitle.current?.value.trim().length! < 2) return\n    await onAddNewList(newListTitle.current?.value!);\n    newListTitle.current!.value= ''\n  }\n  useEffect(() => {\n    async function getTodoLists() {\n      const response = await getTodoListsById(workspaceID);\n      setTodoLists((prevTodoLists:TodoLists[]) => {\n        return response!\n      })\n  \n    }\n    getTodoLists();\n  }, [workspaceID, getTodoListsById, update])\n  return (\n    <>\n   {modalIsShown && <Modal onClose={modalControlHandler} onDeleteTodoList={confirmTodoListDeleteModal}></Modal>}\n    <div className=\"section-workspace\" style={workspaceBackgroundStyle}>\n      <div className=\"todoList-wrapper\">\n        {todoLists!.map((todoList:TodoLists)=> {\n          return <TodoListCard key={todoList._id + todoList.todos.length} onUpdate={updateHandler} onModalControlHandler={modalControlHandler} onSetTodoListID={setTodoListID} id={todoList._id} titleTodoList={todoList.name} todos={!todoList.todos.length ? []: todoList.todos} project={todoList.project}  />\n        })}\n        <form onSubmit={handleAddNewList} className=\"add__card\">\n          <input ref={newListTitle} type=\"text\" placeholder=\"Add a new list\"/>\n          <button className=\"add__card__button\" type=\"submit\">NEW LIST</button>\n        </form>\n      </div>\n    </div>\n    </>\n  )\n}\n","import React, { useContext, useEffect } from 'react'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\nimport { Navbar } from '../../components/shared/navbar/Navbar'\nimport { HomePage } from '../../pages/managerAppPages/homePage/HomePage'\nimport { Profife } from '../../pages/managerAppPages/profilePage/Profife'\nimport { WorkspaceView } from '../../pages/managerAppPages/workspace/Workspace'\nimport { ManagerContextHook } from '../../store/managerContext.tsx/manager-context'\n\nexport const ManagerAppRouter = ({ location }: { location: RouteComponentProps['location'] }) => {\n  localStorage.setItem('lastPath', location.pathname)\n  const ManagerCtx = useContext(ManagerContextHook)\n  const { onGetWorkspaces, workspaces, onCreateWorkspaces } = ManagerCtx;\n  useEffect(() => {\n    onGetWorkspaces()\n  }, [onGetWorkspaces])\n  return (\n    <>\n      <Navbar></Navbar>\n      <Switch>\n        <Route exact path=\"/manager-app/profile\" component={Profife}></Route>\n        <Route path=\"/manager-app/workspace/:workspaceID\" component={(props: any) => <WorkspaceView workspaces={workspaces} />}></Route>\n        <Route path=\"/manager-app/home\" component={(props: any) => <HomePage workspaces={workspaces} addWorkspace={onCreateWorkspaces} {...props} />}></Route>\n      </Switch>\n    </>\n  )\n}\n","import React, { useContext, useEffect } from 'react'\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport { NotificationCmp } from '../../components/shared/notifications/Notification'\nimport { Authorization } from '../../pages/authPages/Authorization'\nimport { AuthContextHook } from '../../store/authContext/auth-context'\nimport { ManagerAppContextProvider } from '../../store/managerContext.tsx/manager-context'\nimport { ManagerAppRouter } from '../managerAppRouter/ManagerAppRouter'\n\nexport const AppRouter = ({onShowNotification, notificationIsShow, notificationContent}:{onShowNotification:()=>void, notificationIsShow:boolean, notificationContent:{text:string, icon:string}}) => {\n  const AuthContext = useContext(AuthContextHook);\n  const { isLoggedIn, onCheckToken} = AuthContext;\n  \n  useEffect(() => {\n    onCheckToken()\n    return () => {\n    }\n  }, [onCheckToken])\n  return (\n    <BrowserRouter>\n    {notificationIsShow && <NotificationCmp notificationContent={notificationContent}/>}\n      <Switch>\n          {!isLoggedIn && <Route path=\"/auth\" component={Authorization}></Route>}\n          <ManagerAppContextProvider>\n          {isLoggedIn && <Route path=\"/manager-app\" component={ManagerAppRouter}></Route>}\n          {isLoggedIn ? <Redirect to={`${localStorage.getItem('lastPath') ? localStorage.getItem('lastPath') : '/manager-app/home/overview'}`} /> : <Redirect to=\"/auth/login\" />}\n          </ManagerAppContextProvider>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n","import React from 'react'\nimport { useNotification } from './hooks/useNotification'\nimport { AppRouter } from './routers/appRouter/AppRouter'\nimport { AuthContextProvider } from './store/authContext/auth-context'\n\nexport const ManagerApp = () => {\n  const {\n    notificationContent,\n    notificationIsShow,\n    showNotificationHandler,\n    hideNotificationHandler,\n    notificationContentHandler\n  } = useNotification();\n  return (\n\n    <AuthContextProvider\n      onShowNotification={showNotificationHandler}\n      onHideNotification={hideNotificationHandler}\n      onNotificationContent={notificationContentHandler} >\n      <AppRouter\n        onShowNotification={showNotificationHandler}\n        notificationIsShow={notificationIsShow}\n        notificationContent={notificationContent}></AppRouter>\n    </AuthContextProvider>\n\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/styles.css';\nimport { ManagerApp } from './ManagerApp';\n\nReactDOM.render(\n    <ManagerApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}